server.port=8081

spring.datasource.url=jdbc:postgresql://localhost:5433/DLF_PATRIMOINE
#spring.datasource.url=jdbc:postgresql://postgres.ck2r24f5e7ku.eu-north-1.rds.amazonaws.com/DLF_PATRIMOINE

spring.datasource.username=postgres
spring.datasource.password=postgres


#spring.datasource.url=jdbc:postgresql://10.2.3.203:5432/DLF_PATRIMOINE

#spring.datasource.username=bedisdv
#spring.datasource.password=bedis002



## Configure JPA
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.properties.javax.persistence.jdbc.lob.non_contextual_creation=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true
#spring.jpa.properties.javax.persistence.hibernate.format_sql=true
#spring.jpa.properties.javax.persistence.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# Activation de la gestion des fichiers multipartes.
spring.servlet.multipart.enabled=true
# Seuil après lequel les fichiers sont écrits sur le disque.
spring.servlet.multipart.file-size-threshold=2KB
# Taille maximale des fichiers.
spring.servlet.multipart.max-file-size=800MB
# Taille maximale de la requête.
spring.servlet.multipart.max-request-size=800MB



#-------------------------------------------------------------------------------------------------------------
## DataSource configuration
#spring.datasource.jndi-name=java:jboss/datasources/DLF_PATRIMOINE
